// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Check1DIds

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWStructuredBuffer<int> _GroupIdBuffer;
RWStructuredBuffer<int> _GroupThreadIdBuffer;
RWStructuredBuffer<int> _GroupIndexBuffer;

[numthreads(4,1,1)]
void Check1DIds (
    // Unique id of entire thread
    // numthreads.x * groups.x
    uint3 id : SV_DispatchThreadID,

    // Group ID
    // example:
    //   if numthreads is (4,1,1)
    //   0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3
    uint3 groupId : SV_GroupID,

    // 3D group index
    // example:
    //   if numthreads is (4,1,1)
    //   0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3
    uint3 groupThreadId : SV_GroupThreadID,

    // Group index which is converted groupThreadId(3D) to 1D's number.
    // When it is 1D, 0 ~ numthreads.x(8)
    // example:
    //   if numthreads is (4,1,1)
    //   0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3
    uint groupIndex : SV_GroupIndex
) {
    _GroupIdBuffer[id.x] = groupId.x;
    _GroupThreadIdBuffer[id.x] = groupThreadId.x;
    _GroupIndexBuffer[id.x] = groupIndex;
}
